import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:provider/provider.dart';
import 'package:user_app/components/components.dart';
import 'package:user_app/config/config.dart';
import 'package:user_app/providers/state_provider.dart';
import 'package:user_app/screens/authentication/otp.dart';
import 'package:user_app/screens/authentication/terms_conditions.dart';

class PhoneInputPage extends StatefulWidget {
  PhoneInputPage({Key? key, this.edit = false}) : super(key: key);

  final bool edit;
  @override
  _PhoneInputPageState createState() => _PhoneInputPageState();
}

class _PhoneInputPageState extends State<PhoneInputPage> {
  GlobalKey<FormState> _formKey = GlobalKey<FormState>();
  TextEditingController _textController = TextEditingController();
  StateProvider? state;
  bool loading = false;
  bool? accepted = false;
  bool? validated = false;

  @override
  void initState() {
    super.initState();
    state = Provider.of<StateProvider>(context, listen: false);
    accepted = widget.edit;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: SafeArea(
        child: Column(
          children: [
            Align(
              alignment: Alignment.topLeft,
              child: IconButton(
                padding: EdgeInsets.all(8),
                splashRadius: 24,
                onPressed: () {
                  Navigator.pop(context);
                },
                icon: AppIcons.back,
              ),
            ),
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 16),
              child: Column(
                children: [
                  Text(
                    widget.edit ? 'Nomer üýtgetmek' : 'Hoş geldiňiz',
                    style: TextStyle(
                      fontSize: 24,
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                  SizedBox(height: 10),
                  Text(
                    widget.edit
                        ? 'Telefon nomeriňizi üýtgetmek üçin\ntäze belgiňizi ýazyň'
                        : 'Giriş kody almak üçin telefon \nbelgiňizi giriziň',
                    textAlign: TextAlign.center,
                  ),
                  SizedBox(height: 10),
                  Form(
                    key: _formKey,
                    child: TextFormField(
                      maxLines: 1,
                      autofocus: true,
                      controller: _textController,
                      keyboardType: TextInputType.phone,
                      style: TextStyle(height: 1.2),
                      decoration: InputDecoration(
                        hintText: 'Telefon belgiňiz',
                        contentPadding: EdgeInsets.fromLTRB(0, 0, 0, 12),
                        prefixIconConstraints:
                            BoxConstraints(minWidth: 0, minHeight: 0),
                        prefixIcon: Padding(
                          padding: const EdgeInsets.only(left: 12),
                          child: Text(
                            '+993 ',
                            style: TextStyle(color: Colors.black, fontSize: 16),
                          ),
                        ),
                      ),
                      validator: phoneValidator,
                      inputFormatters: [
                        LengthLimitingTextInputFormatter(8),
                        FilteringTextInputFormatter.allow(RegExp('[0-9]')),
                      ],
                    ),
                  ),
                  SizedBox(height: 25),
                  if (!widget.edit)
                    Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        Checkbox(
                          value: accepted,
                          fillColor: MaterialStateProperty.resolveWith(
                            (states) {
                              if (states.contains(MaterialState.selected))
                                return UIColors.main;
                              return validated! && !accepted!
                                  ? UIColors.error
                                  : UIColors.passive;
                            },
                          ),
                          shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(4)),
                          onChanged: (value) {
                            setState(() {
                              accepted = value;
                            });
                          },
                        ),
                        TextButton(
                          child: Text(
                            'Ulanyş kadalaryny',
                            style:
                                TextStyle(decoration: TextDecoration.underline),
                          ),
                          onPressed: () {
                            state?.mainNavKey.currentState?.push(
                                pageRouteBuilder(
                                    context, TermsAndConditionsPage()));
                          },
                        ),
                        Text('kabul edýärin'),
                      ],
                    ),
                  SizedBox(height: 50),
                  SizedBox(
                    width: 150,
                    height: 40,
                    child: PrimaryButton(
                      'Dowam et',
                      loading: loading,
                      onPressed: loading
                          ? null
                          : () {
                              if (!accepted!)
                                setState(() {
                                  validated = true;
                                });
                              if (!loading &&
                                  _formKey.currentState!.validate() &&
                                  accepted!) {
                                hideKeyboard();
                                setState(() {
                                  loading = true;
                                });
                                state?.auth(_textController.text).then(
                                  (value) {
                                    setState(() {
                                      loading = false;
                                    });
                                    value == RequestState.Success
                                        ? state?.mainNavKey.currentState?.push(
                                            pageRouteBuilder(
                                              context,
                                              OtpInputPage(edit: widget.edit),
                                            ),
                                          )
                                        : showSnackbar(
                                            context,
                                            'Something went wrong, please try again',
                                          );
                                  },
                                );
                              }
                            },
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
